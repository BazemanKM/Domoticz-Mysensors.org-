--[[
        dzVents version of pvOutput script.
pvOutput.lua downloaded van https://www.huizebruin.nl/domoticz/pvoutput-systeem-koppelen-aan-domoticz-v2020-1/
Bron : https://domoticz.com/forum/viewtopic.php?f=61&t=4714&start=100

        api-key and id stored in domoticz uservariables:

            PVoutput_API     
            PVoutput_ID2 

        both as type string

]]

local scriptVar = 'PVOutput verbruik'

return 
{
    on =    
    { 
        timer = 
        { 
            'every 2 minutes', 
        },
        httpResponses = 
        { 
            scriptVar,
        },
    },
 
    logging =    
    {   
        level = domoticz.LOG_DEBUG, -- change to LOG_ERROR when OK - was LOG_DEBUG
        marker = scriptVar,
    },

    execute = function(dz, item)

        local function post2PVOutput(PVSettings, postData)
            dz.openURL({
                url = PVSettings.url,
                method = 'POST',
                headers = {
                    ['X-Pvoutput-Apikey'] = PVSettings.api,
                    ['X-Pvoutput-SystemId'] = PVSettings.id
                },
                callback = scriptVar,
                postData = postData
            })
        end

        local function makepostData()
  --      local P1 = dz.devices('Stroommeter')                   -- P1-Slimme meter
  --      local generated = dz.devices('Zonnepanelen')           -- Uitvoer van S0 meter omvormer
        local consumed = dz.devices('Bruto verbruik')          -- Verbruik virtueel apparaat 
        local temperature = dz.devices('Zonnepaneel')       -- Temperatuur sensor
  --      local temperature = dz.devices('Buitentemperatuur')
  --      local radiation = dz.devices('Solar radiation')
  --    local voltageDevice = dz.devices('uac1')            --  Voltage meting van 

            local round = dz.utils.round

       --     local voltageString = voltageDevice.sValue
       --    local voltage = round(tonumber(voltageString:match('%d*%.*%d*')),1) -- To prevent error if 'V' is part of the string
                        
       --     dz.log('P1         : ' .. P1.sValue,dz.LOG_DEBUG)
       --     dz.log('generated  : ' .. generated.nValue .. ';' .. generated.sValue,dz.LOG_DEBUG)
            dz.log('consumed   : ' .. consumed.nValue .. ';' .. consumed.sValue,dz.LOG_DEBUG)
            dz.log('Temperature: ' .. temperature.temperature,dz.LOG_DEBUG)
       --     dz.log('radiation: ' .. radiation,dz.LOG_DEBUG)
       --     dz.log('voltage    : ' .. voltage,dz.LOG_DEBUG)
            
            local postdDataAsString = 
                    'd=' .. os.date("%Y%m%d") ..
                    '&t=' .. os.date("%H:%M") .. 
                    
                    -- Gebruik deze als u netto productie van zonnepanelen wilt
                    --'&v1=' .. round(generated.WhTotal,1) ..  -- produced
                    --'&v2=' .. round(generated.actualWatt,1) ..
                    
                    -- Gebruik deze als u wilt dat je de gegevens van je slimme meter wilt gebruiken voor teruggave
                    -- '&v1=' .. P1.return1 + P1.return2 ..  -- returned to the grid
                    -- '&v2=' .. P1.usageDelivered ..
                    
                    -- Gebruik deze als u wilt dat je de gegevens van je slimme meter wilt gebruiken voor gebruik
                    -- '&v4=' .. P1.usage1 + P1.usage2 .. -- net values from your smart meter
                    -- '&v4=' .. P1.usage ..
                    
                    -- Gebruik deze als je wilt wat er wordt berekend
                    -- '&v3=' .. round(consumed.WhTotal,1) .. -- consumed 
                     '&v4=' .. round(consumed.actualWatt,1) ..
                       
                   -- Gebruik deze als je temperatuur en je voltage wilt uploaden
                   -- '&v7=' .. round(temperature.temperature,1) ..
                    '&v8=' .. round(temperature.temperature,1) .. 
                  --  '&v9=' .. round(RadiationAtm,2) ..
                   -- '&v6=' .. voltage ..

                    '&c1=1'

            return postdDataAsString
        end

        -- hieronder hoef je niets te wijzigen

        if item.isHTTPResponse then
            dz.log("Return from PVOutput ==>> " .. item.data,dz.LOG_FORCE)
        else
            PVSettings = 
            {
            url = 'HTTPS://pvoutput.org/service/r2/addstatus.jsp',
            api = dz.variables('PVoutput_API').value,
            id  = dz.variables('PVoutput_ID2').value,
            }
            post2PVOutput(PVSettings, makepostData())
        end
    end
}
